FROM php:7.4-fpm-alpine

# install necessary alpine packages
RUN apk update && apk add --no-cache \
    zip \
    unzip \
    dos2unix \
    supervisor \
    libpng-dev \
    libzip-dev \
    freetype-dev \
    $PHPIZE_DEPS \
    libjpeg-turbo-dev \
    imagemagick \
    imagemagick-dev 
    
# compile native PHP packages
RUN docker-php-ext-install \
    gd \
    pcntl \
    bcmath \
    mysqli \
    pdo_mysql
    
# configure packages
RUN docker-php-ext-configure gd --with-freetype --with-jpeg

# install additional packages from PECL
RUN pecl install zip && docker-php-ext-enable zip \
    && pecl install igbinary && docker-php-ext-enable igbinary \
    && yes | pecl install redis && docker-php-ext-enable redis \
    && pecl install imagick && docker-php-ext-enable imagick

# set composer related environment variables
ENV PATH="/composer/vendor/bin:$PATH" \
    COMPOSER_ALLOW_SUPERUSER=1 \
    # COMPOSER_VENDOR_DIR=/var/www/vendor \
    COMPOSER_HOME=/composer

# install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
    && composer --ansi --version --no-interaction

# install application dependencies
WORKDIR /var/www/html/server
COPY ["composer.json", "composer.lock", "./"]
RUN composer install --no-scripts --no-autoloader --ansi --no-interaction

# add custom php-fpm pool settings, these get written at entrypoint startup
# ENV FPM_PM_MAX_CHILDREN=20 \
#     FPM_PM_START_SERVERS=2 \
#     FPM_PM_MIN_SPARE_SERVERS=1 \
#     FPM_PM_MAX_SPARE_SERVERS=3

# set application environment variables
# ENV APP_NAME="HR System" \
#     APP_ENV=production \
#     APP_DEBUG=false

# copy entrypoint files
# COPY ./services-config/php/docker-php-* /usr/local/bin/
# RUN dos2unix /usr/local/bin/docker-php-entrypoint
# RUN dos2unix /usr/local/bin/docker-php-entrypoint-dev

# copy nginx configuration
# COPY ./services-config/nginx/nginx.conf /etc/nginx/nginx.conf
# COPY ./services-config/nginx/default.conf /etc/nginx/conf.d/default.conf

# copy supervisor configuration
# COPY ["./services-config/supervisord/supervisord.conf", "/etc/supervisord.conf"]

# Set working directory
WORKDIR /var/www/html/server
COPY . .


EXPOSE 80

# run supervisor
ENTRYPOINT ["/var/www/html/server/run.sh"]